---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure group "docker" exists with correct gid
  group:
    name: docker
    state: present
    gid: "{{ docker_group_id }}"
  when: docker_service_group == true

- name: Creating /etc/docker
  file:
    name: /etc/docker
    owner: root
    group: root
    mode: 0644
    state: directory

- name: docker_daemon | Override default daemon with syslog_opts
  set_fact:
    docker_daemon: "{{ docker_daemon | combine(docker_daemon_syslog, recursive=True) }}"
  tags: always
  when: docker_log_driver == "syslog"

- name: docker_daemon | Override default daemon with json_opts
  set_fact:
    docker_daemon: "{{ docker_daemon | combine(docker_daemon_json, recursive=True) }}"
  tags: always
  when: docker_log_driver == "json-file"

- name: Create daemon.json
  template:
    src: etc/docker/daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  notify: restart docker

- name: Install Docker.
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- include_tasks: docker-users.yml
  when: docker_users | length > 0

- include_tasks: docker-networks.yml
  loop: "{{ docker_additional_networks }}"
  loop_control:
    loop_var: network
